#+TITLE: Customizing and extending Emacs Speaks Statistics
#+AUTHOR: Frédéric Santos
#+EMAIL: frederic.santos@u-bordeaux.fr
#+DATE: \today
#+LANGUAGE: en
#+OPTIONS: email:t toc:nil H:3 ^:nil
#+startup: beamer
#+LaTeX_CLASS: beamer
#+LATEX_HEADER: \usetheme{CambridgeUS}
#+LATEX_HEADER: \setbeamertemplate{navigation symbols}{} % pas de barre de navigation
#+LATEX_HEADER: \usepackage[english]{babel}
#+LATEX_HEADER: \usepackage{lmodern}
#+LATEX_HEADER: \usepackage[matha,mathb]{mathabx}
#+LATEX_HEADER: \usepackage{subfig}
#+LATEX_HEADER: \usepackage{mdframed}
#+LATEX_HEADER: \usepackage{minted}
#+LATEX_HEADER: \usemintedstyle{friendly} % set style if needed, see https://frama.link/jfRr8Lpj
#+LATEX_HEADER: \mdfdefinestyle{mystyle}{linecolor=gray!30,backgroundcolor=gray!30}
#+LATEX_HEADER: \BeforeBeginEnvironment{minted}{%
#+LATEX_HEADER: \begin{mdframed}[style=mystyle]}
#+LATEX_HEADER: \AfterEndEnvironment{minted}{%
#+LATEX_HEADER: \end{mdframed} \medskip}
#+LATEX_HEADER: \usepackage{float}
#+LATEX_HEADER: \usepackage{url}
#+LATEX_HEADER: %% Formatting of verbatim outputs (i.e., outputs of R results):
#+LATEX_HEADER: \DefineVerbatimEnvironment{verbatim}{Verbatim}{%
#+LATEX_HEADER:   fontsize = \small,
#+LATEX_HEADER:   frame = leftline,
#+LATEX_HEADER:   formatcom = {\color{gray!97}}
#+LATEX_HEADER: }
#+LATEX_HEADER: \setbeamertemplate{caption}[numbered]
#+LATEX_HEADER: %% Perso colors
#+LATEX_HEADER: \definecolor{PalePurple}{RGB}{127, 90, 182}
#+LATEX_HEADER: \definecolor{DarkPurple}{RGB}{98, 36, 134}
#+LATEX_HEADER: \definecolor{grey}{RGB}{51, 63, 72}
#+LATEX_HEADER: \setbeamercolor{title}{fg=white, bg=DarkPurple}
#+LATEX_HEADER: \setbeamercolor{frametitle}{fg=black}
#+LATEX_HEADER: \setbeamercolor{structure}{fg=PalePurple}
#+LATEX_HEADER: \setbeamercolor{section in head/foot}{fg=white, bg=PalePurple}
#+LATEX_HEADER: \setbeamercolor{subsection in head/foot}{fg=DarkPurple}
#+LATEX_HEADER: \setbeamercolor{title in head/foot}{fg=white, bg=DarkPurple}
#+LATEX_HEADER: \setbeamercolor{date in head/foot}{fg=grey}
#+LATEX_HEADER: %% Structure of a slide :
#+LATEX_HEADER: \setbeamertemplate{footline}
#+LATEX_HEADER: {
#+LATEX_HEADER: \leavevmode%
#+LATEX_HEADER: \hbox{%
#+LATEX_HEADER: \begin{beamercolorbox}[wd=.75\paperwidth,ht=2.25ex,dp=1ex,center]{title in head/foot}%
#+LATEX_HEADER:\usebeamerfont{author in head/foot}\inserttitle
#+LATEX_HEADER:\end{beamercolorbox}%
#+LATEX_HEADER: %\begin{beamercolorbox}[wd=.3\paperwidth,ht=2.25ex,dp=1ex,center]{section in head/foot}%
#+LATEX_HEADER: %\usebeamerfont{title in head/foot}\insertsection
#+LATEX_HEADER: %\end{beamercolorbox}%
#+LATEX_HEADER: \begin{beamercolorbox}[wd=.25\paperwidth,ht=2.25ex,dp=1ex,center]{date in head/foot}%
#+LATEX_HEADER: \insertframenumber{} / \inserttotalframenumber\hspace*{1ex}
#+LATEX_HEADER:  \end{beamercolorbox}}%
#+LATEX_HEADER:  \vskip0pt%
#+LATEX_HEADER: }

* Introductory words
** Filling your Emacs init file
*** A word about ~use-package~
In this document, several pieces of Emacs Lisp code will be proposed so that you can use them in your init file.

It is assumed that you use [[https://jwiegley.github.io/use-package/][~use-package~]] for your init file: the Emacs Lisp code can be adapted in a straightforward manner if you do not use it.

As a reminder, this is the minimal code to add in your init file so as to use ~use-package~, once it has been installed:

#+begin_src emacs-lisp :eval no
(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))
(eval-when-compile
  (require 'use-package))
#+end_src

* ESS customization
** Visibility of evaluation
** Window management
** Syntax highlighting
** Syntax checker
** Rdired buffers

* Some useful Emacs packages
** company
** company-quickhelp
*** Documentation popups
    :PROPERTIES:
    :BEAMER_opt: allowframebreaks,label=
    :END:
[[https://github.com/company-mode/company-quickhelp][~company-quickhelp~]] allows for documentation popups, e.g. to further describe function arguments.

#+CAPTION: Documentation popups with ~company-quickhelp~.
#+ATTR_LATEX: :width \textwidth
[[./images/company-quickhelp.png]]

The minimal elisp code to add to your init file is straightforward:

#+begin_src emacs-lisp :eval no
(use-package company-quickhelp
  :ensure t
  :config
  ;; Load company-quickhelp globally:
  (company-quickhelp-mode)
  ;; Time before display of documentation popup:
  (setq company-quickhelp-delay 0.3))
#+end_src

By default, the documentation popup is shown automatically. You can adjust the time before the popup shows up by customizing the variable ~company-quickhelp-delay~.

** yasnippet
